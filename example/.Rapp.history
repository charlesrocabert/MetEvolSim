library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#
plot(d$param_dln, pch=20)
names(d)
plot(d$param_dln, d$Gri3P, pch=20)
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Gri3P, color=param_id)) +#
geom_line()
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Gri3P, color=param_id)) +#
geom_line() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Gri13P2, color=param_id)) +#
geom_line() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=P1f, color=param_id)) +#
geom_line() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Rib5P, color=param_id)) +#
geom_line() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Rib5P, color=param_id)) +#
geom_line() +#
theme_classic() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
geom_line() +#
theme_classic() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=abs(param_dln), y=abs(Rul5P), color=param_id)) +#
geom_line() +#
theme_classic() +#
theme(legend.position="none")
library("ggplot2")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
geom_line() +#
theme_classic() +#
theme(legend.position="none")
sd(d$Rul5P)/mean(d$Rul5P)
library("ggplot2")#
library("cowplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
figures = c()#
for (met in names(d)[6:45])#
{#
	p = ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
	geom_line() +#
	theme_classic() +#
	theme(legend.position="none")#
	figures = c(figures, p)#
}
figures
facet_grid(figures)
plot_grid(figures)
library("cowplot")
plot_grid(figures)
figures
library("ggplot2")#
library("cowplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
figures = c()#
for (met in names(d)[6:8])#
{#
	p = ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
	geom_line() +#
	theme_classic() +#
	theme(legend.position="none")#
	figures = c(figures, p)#
}#
#
plot_grid(figures, labels="AUTO")
library("ggplot2")#
library("cowplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
figures = c()#
for (met in names(d)[6:8])#
{#
	p = ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
	geom_line() +#
	theme_classic() +#
	theme(legend.position="none")#
	figures = c(figures, plot_grid(p, labels="AUTO"))#
}
plot_grid(figures)
library("ggplot2")#
library("cowplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
figures = c()#
for (met in names(d)[6:8])#
{#
	p = ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
	geom_line() +#
	theme_classic() +#
	theme(legend.position="none")#
	figures = c(figures, plot_grid(p, labels="AUTO"))#
}#
plot_grid(figures)
unique(d$param_id)
plot(d$Rul5P/d$param_dln)
plot(d$Gri3P/d$param_dln)
mean(d$Gri3P/d$param_dln)
mean(d$Gri3P/d$param_dln, na.rm=T)
plot(d$Gri3P, d$param_dln)
M = cor(d[,c(seq(5:45))])
M = cor(d[,seq(5:45)])
M = cor(d[,5:45])
corrplot(M)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
figures = c()#
for (met in names(d)[6:45])#
{#
	p = ggplot(d, aes(x=param_dln, y=Rul5P, color=param_id)) +#
	geom_line() +#
	theme_classic() +#
	theme(legend.position="none")#
	figures = c(figures, plot_grid(p, labels="AUTO"))#
}#
#
M = cor(d[,5:45])#
corrplot(M)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
M = cor(d[,5:45])#
corrplot(M)
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	dl = d[d$param_id==param_id,]#
	M  = cor(d[,5:45])#
	MALL = rbind(MALL, M[1,])#
}#
#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	dl = d[d$param_id==param_id,]#
	M  = cor(d[,5:45], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(d[,5:45], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
#
#corrplot(MALL)
rownames(MALL) = unique(d$param_id)
corrplot(MALL)
corrplot(t(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(d[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
corrplot(t(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
corrplot(t(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
#
MALL = c()#
for (param_id in unique(d$param_id))#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS[1:5])#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS[1:5])#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[-2,]#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[-1,]#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[-1,-1]#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,10)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
corrplot(MALL)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
corrplot(MALL)
corrplot(MALL, tl.cex=0.2)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="pearson")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
corrplot(MALL, tl.cex=0.2)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="pearson")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.2)
plot(rowSums(MALL))
plot(rowSums(MALL), pch=20)
text(rowSums(MALL), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.2)#
#
plot(rowSums(MALL), pch=20)#
text(rowSums(MALL), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.2)#
#
plot(rowSums(MALL)/len(rownames(MALL)), pch=20)#
text(rowSums(MALL)/len(rownames(MALL)), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.2)#
#
plot(rowSums(MALL)/length(rownames(MALL)), pch=20)#
text(rowSums(MALL)/length(rownames(MALL)), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="spearman")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.2)#
#
plot(rowSums(MALL)/length(colnames(MALL)), pch=20)#
text(rowSums(MALL)/length(colnames(MALL)), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl = d[d$param_id==param_id,]#
	M  = cor(dl[,c(5,MET)], method="pearson")#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.2)#
#
plot(rowSums(MALL)/length(colnames(MALL)), pch=20)#
text(rowSums(MALL)/length(colnames(MALL)), rownames(MALL))
corrplot(MALL, tl.cex=0.2)
corrplot(MALL, tl.cex=0.3)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
index = 1#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl   = d[d$param_id==param_id,]#
	M    = cor(dl[,c(5,MET)], method="pearson")#
	LINE = M[1,]#
	rownames(LINE) = c(paste(param_id," (",index,")",sep=""))#
	MALL = rbind(MALL, M[1,])#
}#
#rownames(MALL) = unique(d$param_id)#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.3)#
#
plot(rowSums(MALL)/length(colnames(MALL)), pch=20)#
text(rowSums(MALL)/length(colnames(MALL)), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
index = 1#
names = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl   = d[d$param_id==param_id,]#
	M    = cor(dl[,c(5,MET)], method="pearson")#
	LINE = M[1,]#
	names = c(names, paste(param_id," (",index,")",sep=""))#
	MALL = rbind(MALL, M[1,])#
}#
rownames(MALL) = names#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.3)#
#
plot(rowSums(MALL)/length(colnames(MALL)), pch=20)#
text(rowSums(MALL)/length(colnames(MALL)), rownames(MALL))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
index = 1#
names = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl    = d[d$param_id==param_id,]#
	M     = cor(dl[,c(5,MET)], method="pearson")#
	LINE  = M[1,]#
	names = c(names, paste(param_id," (",index,")",sep=""))#
	MALL  = rbind(MALL, M[1,])#
	index = index+1#
}#
rownames(MALL) = names#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.3)#
#
#plot(rowSums(MALL)/length(colnames(MALL)), pch=20)#
#text(rowSums(MALL)/length(colnames(MALL)), rownames(MALL))
mean_cor = rowSums(MALL)/length(colnames(MALL))
mean_cor
sort(mean_cor)
barplot(mean_cor, names=colnames(mean_cor))
mean_cor = rowSums(MALL)/length(colnames(MALL))#
mean_cor = sort(mean_cor)#
barplot(mean_cor, names=colnames(mean_cor), las=2)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
#names(d)#
#
MET = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MALL = c()#
index = 1#
names = c()#
for (param_id in PARAM_IDS)#
{#
	print(param_id)#
	dl    = d[d$param_id==param_id,]#
	M     = cor(dl[,c(5,MET)], method="spearman")#
	LINE  = M[1,]#
	names = c(names, paste(param_id," (",index,")",sep=""))#
	MALL  = rbind(MALL, M[1,])#
	index = index+1#
}#
rownames(MALL) = names#
MALL = t(MALL)#
MALL[is.na(MALL)] = 0.0#
MALL = MALL[c(-1,-2),-1]#
MALL = abs(MALL)#
corrplot(MALL, tl.cex=0.3)#
#
mean_cor = rowSums(MALL)/length(colnames(MALL))#
mean_cor = sort(mean_cor)#
barplot(mean_cor, names=colnames(mean_cor), las=2)
names(d)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
FLUX      = seq(46,83)#
MET       = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MCOR      = c()#
index     = 1#
names     = c()#
for (param_id in PARAM_IDS)#
{#
	dl    = d[d$param_id==param_id,]#
	M     = cor(dl[,c(5,MET)], method="spearman")#
	LINE  = M[1,]#
	names = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR  = rbind(MCOR, M[1,])#
	index = index+1#
}#
rownames(MCOR) = names#
MCOR = t(MCOR)#
MCOR[is.na(MCOR)] = 0.0#
MCOR = MCOR[c(-1,-2),-1]#
MCOR = abs(MCOR)#
corrplot(MCOR, tl.cex=0.3)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
FLUX      = seq(46,83)#
MET       = seq(5,45)#
PARAM_IDS = unique(d$param_id)#
MCOR      = c()#
index     = 1#
names     = c()#
for (param_id in PARAM_IDS)#
{#
	dl    = d[d$param_id==param_id,]#
	M     = cor(dl[,c(5,MET)], method="spearman")#
	LINE  = M[1,]#
	names = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR  = rbind(MCOR, M[1,])#
	index = index+1#
}#
rownames(MCOR) = names#
MCOR = t(MCOR)#
MCOR[is.na(MCOR)] = 0.0#
MCOR = MCOR[c(-1,-2),-1]#
MCOR = abs(MCOR)#
#corrplot(MCOR, tl.cex=0.3)#
#
mean_cor = rowSums(MALL)/length(colnames(MALL))#
mean_cor = sort(mean_cor)#
barplot(mean_cor, names=colnames(mean_cor), las=2)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
PARAM_IDS = unique(d$param_id)#
FLUX      = seq(46,83)#
MET       = seq(5,45)#
MCOR_FLUX = c()#
MCOR_MET  = c()#
index     = 1#
names     = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	index     = index+1#
}#
rownames(MCOR_FLUX) = names#
rownames(MCOR_MET) = names#
MCOR_FLUX = t(MCOR_FLUX)#
MCOR_MET = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)] = 0.0#
MCOR_FLUX = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX = abs(MCOR_FLUX)#
MCOR_MET = abs(MCOR_MET)#
#corrplot(MCOR, tl.cex=0.3)#
#
#mean_cor = rowSums(MALL)/length(colnames(MALL))#
#mean_cor = sort(mean_cor)#
#barplot(mean_cor, names=colnames(mean_cor), las=2)#
mean_sens =
corrplot(MCOR_FLUX, tl.cex=0.3)
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
barplot(mean_cor, names=colnames(mean_cor), las=2)
corrplot(MCOR_FLUX, tl.cex=0.3)
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
barplot(mean_cor, names=colnames(mean_cor), las=2)
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Mean Spearman correlation")
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Mean Spearman correlation")
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation")
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Flux name", ylab="Mean Spearman correlation")
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Flux name", ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes")
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Flux name", ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes" col="cornflowerblue")
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Flux name", ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
plot(d$param_dln, d$v_1)
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
plot(d$param_dln, d$v_1)
ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
geom_line()
ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
geom_line() +#
theme_classic() +#
theme(legend.position="none")
ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
geom_line() +#
theme_classic() +#
xlim(-0.1, 0.1) +#
theme(legend.position="none")
ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
geom_line() +#
theme_classic() +#
ylim(-0.1, 0.1) +#
theme(legend.position="none")
ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
geom_line() +#
theme_classic() +#
ylim(-0.03, 0.03) +#
theme(legend.position="none")
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Flux name", ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
mean_cor = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, xlab="Metabolite name", ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and metabolite changes", col="cornflowerblue")
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and metabolite changes", col="cornflowerblue")
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
geom_line() +#
theme_classic() +#
ylim(-0.03, 0.03) +#
theme(legend.position="none")#
#
PARAM_IDS = unique(d$param_id)#
FLUX      = seq(46,83)#
MET       = seq(5,45)#
MCOR_FLUX = c()#
MCOR_MET  = c()#
index     = 1#
names     = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = dl[,FLUX]/dl[,5]#
	S2 = dl[,MET]/dl[,5]#
	print(S2)#
	index     = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
mean_sens =
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS = unique(d$param_id)#
FLUX      = seq(46,83)#
MET       = seq(5,45)#
MCOR_FLUX = c()#
MCOR_MET  = c()#
index     = 1#
names     = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = dl[,FLUX]/dl[,5]#
	S2 = dl[,MET]/dl[,5]#
	print(rowMeans(S2))#
	index     = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
mean_sens =
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = rowMeans(dl[,FLUX]/dl[,5])#
	S2 = rowMeans(dl[,MET]/dl[,5])#
	MSENS_FLUX = rbind(MSENS_FLUX, S1[,1])#
	MSENS_MET = rbind(MSENS_MET, S2[,1])#
	index     = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
mean_sens =
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = rowMeans(dl[,FLUX]/dl[,5])#
	S2 = rowMeans(dl[,MET]/dl[,5])#
	MSENS_FLUX = rbind(MSENS_FLUX, S1[1,])#
	MSENS_MET = rbind(MSENS_MET, S2[1,])#
	index     = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
mean_sens =
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = rowMeans(dl[,FLUX]/dl[,5])#
	S2 = rowMeans(dl[,MET]/dl[,5])#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET = rbind(MSENS_MET, S2)#
	index     = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
mean_sens =
MSENS_MET
MSENS_MET
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = rowMeans(dl[,FLUX])#
	S2 = rowMeans(dl[,MET])#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET = rbind(MSENS_MET, S2)#
	index     = index+1#
}#
#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
mean_sens =
q
MSENS_MET
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = rowMeans(abs(dl[,FLUX]))#
	S2 = rowMeans(abs(dl[,MET]))#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET = rbind(MSENS_MET, S2)#
	index     = index+1#
}#
MSENS_MET
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = colMeans(abs(dl[,FLUX]))#
	S2 = colMeans(abs(dl[,MET]))#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET = rbind(MSENS_MET, S2)#
	index     = index+1#
}#
MSENS_MET
corrplot(MSENS_MET)
corrplot(MSENS_MET/max(MSENS_MET))
head(MSENS_MET)
rownames(MSENS_MET)         = names
rownames(MSENS_FLUX)        = names
head(MSENS_FLUX)
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl        = d[d$param_id==param_id,]#
	### COMPUTE CORRELATIONS ####
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	### COMPUTE SENSITIVITIES ####
	S1 = colMeans(abs(dl[,FLUX]))#
	S2 = colMeans(abs(dl[,MET]))#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET = rbind(MSENS_MET, S2)#
	index     = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
rownames(MSENS_FLUX)        = names#
rownames(MSENS_MET)         = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MSENS_FLUX                  = t(MSENS_FLUX)#
MSENS_MET                   = t(MSENS_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MSENS_FLUX                  = MSENS_FLUX[,-1]#
MSENS_MET                   = MSENS_MET[,-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
head(MSENS_FLUX)#
#corrplot(MCOR_FLUX, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_FLUX)/length(colnames(MCOR_FLUX))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
head(MSENS_FLUX)
mean_cor = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
corrplot(MCOR_MET, tl.cex=0.3)
mean_cor = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl = d[d$param_id==param_id,]#
	#----------------------##
	# COMPUTE CORRELATIONS ##
	#----------------------##
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	#-----------------------##
	# COMPUTE SENSITIVITIES ##
	#-----------------------##
	dl = dl[dl$param_dln != 0.0,]#
	S1 = colMeans(abs(dl[,FLUX])/dl$param_dln)#
	S2 = colMeans(abs(dl[,MET])/dl$param_dln)#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET  = rbind(MSENS_MET, S2)#
	index      = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
rownames(MSENS_FLUX)        = names#
rownames(MSENS_MET)         = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MSENS_FLUX                  = t(MSENS_FLUX)#
MSENS_MET                   = t(MSENS_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MSENS_FLUX                  = MSENS_FLUX[,-1]#
MSENS_MET                   = MSENS_MET[,-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#
corrplot(MCOR_MET, tl.cex=0.3)#
#
mean_cor = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
mean_cor = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(5,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl = d[d$param_id==param_id,]#
	#----------------------##
	# COMPUTE CORRELATIONS ##
	#----------------------##
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	#-----------------------##
	# COMPUTE SENSITIVITIES ##
	#-----------------------##
	dl = dl[dl$param_dln != 0.0,]#
	S1 = colMeans(abs(dl[,FLUX])/abs(dl$param_dln))#
	S2 = colMeans(abs(dl[,MET])/abs(dl$param_dln))#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET  = rbind(MSENS_MET, S2)#
	index      = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
rownames(MSENS_FLUX)        = names#
rownames(MSENS_MET)         = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MSENS_FLUX                  = t(MSENS_FLUX)#
MSENS_MET                   = t(MSENS_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MSENS_FLUX                  = MSENS_FLUX[,-1]#
MSENS_MET                   = MSENS_MET[,-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#
corrplot(MCOR_MET, tl.cex=0.3)#
#
mean_cor = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(6,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl = d[d$param_id==param_id,]#
	#----------------------##
	# COMPUTE CORRELATIONS ##
	#----------------------##
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	#-----------------------##
	# COMPUTE SENSITIVITIES ##
	#-----------------------##
	dl = dl[dl$param_dln != 0.0,]#
	S1 = colMeans(abs(dl[,FLUX])/abs(dl$param_dln))#
	S2 = colMeans(abs(dl[,MET])/abs(dl$param_dln))#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET  = rbind(MSENS_MET, S2)#
	index      = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
rownames(MSENS_FLUX)        = names#
rownames(MSENS_MET)         = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MSENS_FLUX                  = t(MSENS_FLUX)#
MSENS_MET                   = t(MSENS_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MSENS_FLUX                  = MSENS_FLUX[,-1]#
MSENS_MET                   = MSENS_MET[,-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#
corrplot(MCOR_MET, tl.cex=0.3)#
#
mean_cor = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
mean_cor = sort(mean_cor)#
#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
barplot(log10(mean_cor), names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")
abline(h=(10^0.01-10^-0.01)/2)
abline(h=log10((10^0.01-10^-0.01)/2))
library("ggplot2")#
library("cowplot")#
library("corrplot")#
#
setwd("/Users/charlesrocabert/git/MetEvolSim-development/example")#
#
d = read.table("output/sensitivity_analysis.txt", h=T, sep=" ")#
names(d)#
#
#ggplot(d, aes(x=param_dln, y=v_1, color=param_id)) +#
#geom_line() +#
#theme_classic() +#
#ylim(-0.03, 0.03) +#
#theme(legend.position="none")#
#
PARAM_IDS  = unique(d$param_id)#
FLUX       = seq(46,83)#
MET        = seq(6,45)#
MCOR_FLUX  = c()#
MCOR_MET   = c()#
MSENS_FLUX = c()#
MSENS_MET  = c()#
index      = 1#
names      = c()#
for (param_id in PARAM_IDS)#
{#
	dl = d[d$param_id==param_id,]#
	#----------------------##
	# COMPUTE CORRELATIONS ##
	#----------------------##
	M1        = cor(dl[,c(5,FLUX)], method="spearman")#
	M2        = cor(dl[,c(5,MET)], method="spearman")#
	names     = c(names, paste(param_id," (",index,")",sep=""))#
	MCOR_FLUX = rbind(MCOR_FLUX, M1[1,])#
	MCOR_MET  = rbind(MCOR_MET, M2[1,])#
	#-----------------------##
	# COMPUTE SENSITIVITIES ##
	#-----------------------##
	dl = dl[dl$param_dln != 0.0,]#
	S1 = colMeans(abs(dl[,FLUX])/abs(dl$param_dln))#
	S2 = colMeans(abs(dl[,MET])/abs(dl$param_dln))#
	MSENS_FLUX = rbind(MSENS_FLUX, S1)#
	MSENS_MET  = rbind(MSENS_MET, S2)#
	index      = index+1#
}#
rownames(MCOR_FLUX)         = names#
rownames(MCOR_MET)          = names#
rownames(MSENS_FLUX)        = names#
rownames(MSENS_MET)         = names#
MCOR_FLUX                   = t(MCOR_FLUX)#
MCOR_MET                    = t(MCOR_MET)#
MSENS_FLUX                  = t(MSENS_FLUX)#
MSENS_MET                   = t(MSENS_MET)#
MCOR_FLUX[is.na(MCOR_FLUX)] = 0.0#
MCOR_MET[is.na(MCOR_MET)]   = 0.0#
MCOR_FLUX                   = MCOR_FLUX[c(-1,-2),-1]#
MCOR_MET                    = MCOR_MET[c(-1,-2),-1]#
MSENS_FLUX                  = MSENS_FLUX[,-1]#
MSENS_MET                   = MSENS_MET[,-1]#
MCOR_FLUX                   = abs(MCOR_FLUX)#
MCOR_MET                    = abs(MCOR_MET)#
#
corrplot(MCOR_MET, tl.cex=0.3)#
#
mean_cor  = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_sens = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
estimator = mean_cor*mean_sens#
mean_cor = sort(mean_cor)#
mean_sens = sort(mean_sens)#
estimator = sort(estimator)#
#
par(mfrow=c(2,2))#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
barplot(mean_sens, names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
barplot(estimator, names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
#
abline(h=log10((10^0.01-10^-0.01)/2))
barplot(log10(estimator), names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")
abline(h=log10((10^0.01-10^-0.01)/2))
mean_cor  = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_sens = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
estimator = mean_cor*mean_sens#
mean_cor = sort(mean_cor)#
mean_sens = sort(mean_sens)#
#estimator = sort(estimator)#
#
par(mfrow=c(2,2))#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
barplot(mean_sens, names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
barplot(log10(estimator), names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
#
abline(h=log10((10^0.01-10^-0.01)/2))
abline(h=mean(log10(estimator)), col="red")
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")
mean_cor  = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_sens = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
estimator = mean_cor*mean_sens#
mean_cor = sort(mean_cor)#
mean_sens = sort(mean_sens)#
#estimator = sort(estimator)#
#
par(mfrow=c(2,2))#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
barplot(mean_sens, names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
barplot(log10(sort(estimator)), names=colnames(sort(estimator)), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
barplot(log10(estimator), names=colnames(estimator), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
abline(h=log10((10^0.01-10^-0.01)/2))#
abline(h=mean(log10(estimator)), col="red")#
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")
mean_cor  = rowSums(MCOR_MET)/length(colnames(MCOR_MET))#
mean_sens = rowSums(MSENS_MET)/length(colnames(MSENS_MET))#
estimator = mean_cor*mean_sens#
mean_cor = sort(mean_cor)#
mean_sens = sort(mean_sens)#
#estimator = sort(estimator)#
#
par(mfrow=c(2,2))#
barplot(mean_cor, names=colnames(mean_cor), las=2, ylab="Mean Spearman correlation", main="Correlation between kinetic parameter changes and flux changes", col="cornflowerblue")#
barplot(mean_sens, names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
barplot(log10(sort(estimator)), names=colnames(sort(estimator)), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
abline(h=log10((10^0.01-10^-0.01)/2))#
abline(h=mean(log10(estimator)), col="red")#
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")#
barplot(log10(estimator), names=colnames(estimator), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
abline(h=log10((10^0.01-10^-0.01)/2))#
abline(h=mean(log10(estimator)), col="red")#
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")
barplot(log10(mean_sens), names=colnames(mean_sens), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")
abline(h=log10((10^0.01-10^-0.01)/2))
abline(h=mean(log10(estimator)), col="red")
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")
barplot(log10(estimator), names=colnames(estimator), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
abline(h=log10((10^0.01-10^-0.01)/2))#
abline(h=mean(log10(estimator)), col="red")#
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")
barplot(log10(sort(estimator)), names=colnames(sort(estimator)), las=2, ylab="Mean sensibility", main="Abundance sensibility to kinetic parameter changes", col="cornflowerblue")#
abline(h=log10((10^0.01-10^-0.01)/2))#
abline(h=mean(log10(estimator)), col="red")#
abline(h=mean(log10(estimator[estimator>1e-3])), col="green")
